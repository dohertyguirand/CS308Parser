FORWARD (FD),pixels,moves turtle forward in its current heading by pixels distance,returns the value of pixels
BACK (BK),pixels,moves turtle backward in its current heading by pixels distance,returns the value of pixels
LEFT (LT),degrees,turns turtle counterclockwise by degrees angle,returns the value of degrees
RIGHT (RT),degrees,turns turtle clockwise by degrees angle,returns the value of degrees
SETHEADING (SETH),degrees,turns turtle to an absolute heading,returns number of degrees moved
TOWARDS,x y,turns turtle to face the point (x y) where (0 0) is the center of the screen,returns the number of degrees turtle turned
SETXY (GOTO),x y,moves turtle to an absolute screen position where (0 0) is the center of the screen,returns the distance turtle moved
PENDOWN (PD),NA,puts pen down such that when the turtle moves; it leaves a trail,returns 1
PENUP (PU),NA,puts pen up such that when the turtle moves; it does not leave a trail,returns 0
SHOWTURTLE (ST),NA,makes turtle visible,returns 1
HIDETURTLE (HT),NA,makes turtle invisible,returns 0
HOME,NA,moves turtle to the center of the screen (0 0),returns the distance turtle moved
CLEARSCREEN (CS),NA,erases turtle's trails and sends it to the home position,returns the distance turtle moved
XCOR,NA,NA,returns the turtle's X coordinate from the center of the screen
YCOR,NA,NA,returns the turtle's Y coordinate from the center of the screen
HEADING,NA,NA,returns the turtle's heading in degrees
PENDOWN? (PENDOWNP),NA,NA,returns 1 if turtle's pen is down 0 if it is up
SHOWING? (SHOWINGP),NA,NA,returns 1 if turtle is showing 0 if it is hiding
SUM (+),expr1 expr2,NA,returns sum of the values of expr1 and expr2
DIFFERENCE (-),expr1 expr2,NA,returns difference of the values of expr1 and expr2
PRODUCT (*),expr1 expr2,NA,returns product of the values of expr1 and expr2
QUOTIENT (/),expr1 expr2,NA,returns quotient of the values of expr1 and expr2
REMAINDER (%),expr1 expr2,NA,returns remainder on dividing the values of expr1 by expr2
MINUS (~),expr,NA,returns negative of the values of expr
RANDOM,max,NA,returns random non-negative number strictly less than max
SIN,degrees,NA,returns sine of degrees
COS,degrees,NA,returns cosine of degrees
TAN,degrees,NA,returns tangent of degrees
ATAN,degrees,NA,returns arctangent of degrees
LOG,expr,NA,returns natural log of expr
POW,base exponent,NA,returns base raised to the power of the exponent
PI,NA,NA,returns the number Pi
LESS? (LESSP),expr1 expr2,NA,returns 1 if the value of expr1 is strictly less than the value of expr2 otherwise 0
GREATER? (GREATERP),expr1 expr2,NA,returns 1 if the value of expr1 is strictly greater than the value of expr2 otherwise 0
EQUAL? (EQUALP),expr1 expr2,NA,returns 1 if the value of expr1 and the value of expr2 are equal otherwise 0
NOTEQUAL? (NOTEQUALP),expr1 expr2,NA,returns 1 if the value of expr1 and the value of expr2 are not equal otherwise 0
AND,test1 test2,NA,returns 1 if test1 and test2 are non-zero otherwise 0
OR,test1 test2,NA,returns 1 if test1 or test2 are non-zero otherwise 0
NOT,test,NA,returns 1 if test is 0 and 0 if test is non-zero
MAKE (SET),variable expr,assigns the value of expr to variable creating the variable if necessary,returns expr
REPEAT,expr [ command(s) ],runs command(s) given in the list the value of expr number of times,returns the value of the final command executed (or 0 if no commands are executed) note: the value of the current iteration starting at 1 is automatically assigned to the variable :repcount so that it can be accessed by the command(s)
DOTIMES,[ variable limit ] [ command(s) ],runs command(s) for each value specified in the range i.e. from (1 - limit) inclusive,returns the value of the final command executed (or 0 if no commands are executed); note: variable is assigned to each succeeding value so that it can be accessed by the command(s)
FOR,[ variable start end increment ] [ command(s) ],runs command(s) for each value specified in the range i.e. from (start - end) going by increment,returns the value of the final command executed (or 0 if no commands are executed) note: variable is assigned to each succeeding value so that it can be accessed by the command(s)
IF,expr [ command(s) ],if expr is not 0 runs the command(s) given in the list, returns the value of the final command executed (or 0 if no commands are executed)
IFELSE,expr [ trueCommand(s) ] [ falseCommand(s) ],if expr is not 0 runs the trueCommands given in the first list otherwise runs the falseCommands given in the second list,returns the value of the final command executed (or 0 if no commands are executed)
TO,commandName [ variable(s) ] [ command(s) ],assigns command(s) given in the second list to commandName using parameters given in first list as variables when commandName is used later in a program; any given values are assigned to variables that can be accessed when the command list is run and the value of the final command executed is returned (or 0 if no commands are executed),returns 1 if command is successfully defined otherwise 0